apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.gitlab.arturbosch.detekt'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

project.ext {
    androidArchVersion = "1.1.1"
    androidxCore = "1.3.0-rc01"
    rxJavaVersion = "2.1.0"
    rxAndroidVersion = "2.0.1"
    timberVersion = "4.7.1"
    priorityJobQueueVersion = "2.0.1"
    playServicesVersion = "11.4.2"
    retrofitVersion = "2.1.0"
    okHttpVersion = "3.4.1"
    rxRelayVersion = "2.0.0"
    rxLintVersion = "1.6"
    lifecycle = "2.2.0"
    api_auth = "1.25.0"
    adapterdelegates4 = "4.2.0"
    glide = "4.11.0"
    glide_transformations = "4.0.1"
    retrofit = "2.6.0"
    room = "2.2.5"
    rxbinding = "2.2.0"
    rxkotlin = "2.4.0"
    version = "2"
}

detekt {
    config = files("detekt-config.yml")
}

android {
    compileSdkVersion 29
    defaultConfig {
        applicationId "com.bugtsa.casher"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0$version"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    buildTypes.each {
        it.buildConfigField 'String', 'WEATHER_API_KEY', '"db9d12cd7429d8827de75c91a999793d"'
    }

    flavorDimensions "default"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    packagingOptions {
        exclude 'META-INF/rxjava.properties'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "androidx.appcompat:appcompat:1.1.0"
    implementation "com.google.android.material:material:1.1.0"
    implementation "androidx.legacy:legacy-support-v13:1.0.0"
    implementation "androidx.recyclerview:recyclerview:1.1.0"
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation "androidx.core:core:$androidxCore"
    implementation "androidx.core:core-ktx:$androidxCore"

    implementation 'com.google.android.gms:play-services-auth:17.0.0'
    implementation 'pub.devrel:easypermissions:2.0.0'
    implementation('com.google.api-client:google-api-client-android:1.25.0') {
        exclude group: 'org.apache.httpcomponents'
    }

    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle"
    implementation "com.github.hadilq.liveevent:liveevent:1.0.1"

    implementation "com.google.api-client:google-api-client:$api_auth"
    implementation "com.google.api-client:google-api-client-android:$api_auth"

    implementation 'com.google.apis:google-api-services-people:v1-rev4-1.22.0'

    implementation 'com.github.stephanenicolas.toothpick:toothpick-runtime:1.1.1'
    kapt 'com.github.stephanenicolas.toothpick:toothpick-compiler:1.1.1'
    testImplementation 'com.github.stephanenicolas.toothpick:toothpick-testing:1.1.1'

    implementation "io.reactivex.rxjava2:rxjava:2.2.19"
    implementation "io.reactivex.rxjava2:rxandroid:2.1.1"
    implementation "io.reactivex.rxjava2:rxkotlin:$rxkotlin"

    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    implementation "com.squareup.okhttp:okhttp:$retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit"

    // AdapterDelegates
    implementation "com.hannesdorfmann:adapterdelegates4:$adapterdelegates4"

    //Bones
    implementation 'com.github.horovodovodo4ka:bones:1.2.12'

    implementation "com.jakewharton.rxbinding2:rxbinding:$rxbinding"

    implementation('com.crashlytics.sdk.android:crashlytics:2.10.1@aar') {
        transitive = true
    }

    // Room Database
    implementation "androidx.room:room-runtime:$room"
    implementation "androidx.room:room-rxjava2:$room"
    kapt "androidx.room:room-compiler:$room"

    // Timber
    implementation "com.jakewharton.timber:timber:$project.timberVersion"

    implementation 'com.facebook.stetho:stetho:1.5.1'

    // Glide
    implementation "com.github.bumptech.glide:glide:$glide"
    kapt "com.github.bumptech.glide:compiler:$glide"
    implementation "jp.wasabeef:glide-transformations:$glide_transformations"
    implementation("com.github.bumptech.glide:okhttp3-integration:$glide") {
        transitive = false
    }

    // Charts
    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'
    implementation 'com.github.AnyChart:AnyChart-Android:1.1.2'

    // Calendar & Date Picker
    implementation 'com.github.maxyou:CalendarPicker:v1.1.2'
    implementation 'com.borax12.materialdaterangepicker:library:1.9'

    implementation 'androidx.multidex:multidex:2.0.1'

    debugImplementation 'com.idescout.sql:sqlscout-server:4.1'
    releaseImplementation 'com.idescout.sql:sqlscout-server-noop:4.1'
}

kapt {
    generateStubs = true

    arguments {
        arg("toothpick_registry_package_name", "com.bugtsa.casher")
    }
}
